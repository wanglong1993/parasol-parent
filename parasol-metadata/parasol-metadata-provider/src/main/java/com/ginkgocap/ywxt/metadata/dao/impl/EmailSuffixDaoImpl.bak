package com.ginkgocap.ywxt.metadata.dao.impl;

import java.util.List;

import javax.annotation.PostConstruct;
import javax.annotation.Resource;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;
import org.springframework.stereotype.Component;

import com.ginkgocap.ywxt.metadata.dao.EmailSuffixDao;
import com.ginkgocap.ywxt.metadata.model.EmailSuffix;
import com.ibatis.sqlmap.client.SqlMapClient;
@Component("emailSuffixDao")
public class EmailSuffixDaoImpl extends SqlMapClientDaoSupport implements EmailSuffixDao {
	@Resource
	SqlMapClient metadataSqlMapClient;
	@PostConstruct
	public void initSqlMapClient() {
		super.setSqlMapClient(metadataSqlMapClient);
	}
	@Override
	public EmailSuffix findOne(long id) {
		EmailSuffix emailSuffix = (EmailSuffix) getSqlMapClientTemplate().queryForObject(
				"tb_email_suffix.findOne", id);
		return emailSuffix;
	}

	@Override
	public List<String> findAll() {
		List<String> list = getSqlMapClientTemplate().queryForList(
				"tb_email_suffix.findAll");
		return list;
	}

	@Override
	public EmailSuffix saveOrUpdate(EmailSuffix emailSuffix) {
		EmailSuffix temp = findOne(emailSuffix.getId());
		if(temp==null){
			Long id = (Long) getSqlMapClientTemplate().insert(
					"tb_email_suffix.insert", emailSuffix);
			if (id != null) {
				emailSuffix.setId(id);
				return emailSuffix;
			} else {
				return null;
			}
		}else{
			getSqlMapClientTemplate().update("tb_email_suffix.update", emailSuffix);
			return emailSuffix;
		}
	}

	@Override
	public void delete(long id) {
		getSqlMapClientTemplate().delete("tb_email_suffix.delete", id);
	}

}
