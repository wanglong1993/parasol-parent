package com.ginkgocap.ywxt.metadata.dao.code.impl;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.PostConstruct;
import javax.annotation.Resource;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;
import org.springframework.stereotype.Repository;

import com.ginkgocap.ywxt.metadata.dao.code.RCodeDockDao;
import com.ginkgocap.ywxt.metadata.model.Code;
import com.ginkgocap.ywxt.metadata.model.RCodeDock;
import com.ginkgocap.ywxt.util.DateFunc;
import com.ibatis.sqlmap.client.SqlMapClient;
@Repository("rCodeDockDao")
public class RCodeDockDaoImpl extends SqlMapClientDaoSupport implements RCodeDockDao {
	@Resource
    SqlMapClient metadataSqlMapClient;

    @PostConstruct
    public void initSqlMapClient() {
        super.setSqlMapClient(metadataSqlMapClient);
    }
	@Override
	public RCodeDock selectByPrimarKey(long id) {
		return (RCodeDock) getSqlMapClientTemplate().queryForObject("tb_r_code_dock.selectByPrimaryKey", id);
	}

	@Override
	public RCodeDock save(RCodeDock rCodeDock) {
		rCodeDock.setCtime(DateFunc.getDate());
        Long id = (Long) getSqlMapClientTemplate().insert("tb_r_code_dock.insertRCodeDock", rCodeDock);
        if (id != null) {
        	rCodeDock.setId(id);
            return rCodeDock;
        } else {
            return null;
        }
	}

	@Override
	public int update(RCodeDock rCodeDock) {
		return  getSqlMapClientTemplate().update("tb_r_code_dock.updateRCodeDock", rCodeDock);
	}

	@Override
	public int delete(long id) {
		return getSqlMapClientTemplate().delete("tb_r_code_dock.deleteRCodeDock", id);
	}

	@Override
	public List<RCodeDock> dockTz(String tz) {
		Map<String, Object> map = new HashMap<String, Object>();
        map.put("tz", tz);
        List<RCodeDock> list = getSqlMapClientTemplate().queryForList("tb_r_code_dock.selectDockTz", map);
        return list;
	}

	@Override
	public List<RCodeDock> dockRz(String rz) {
		Map<String, Object> map = new HashMap<String, Object>();
        map.put("rz", rz);
        List<RCodeDock> list = getSqlMapClientTemplate().queryForList("tb_r_code_dock.selectDockRz", map);
        return list;
	}

	@Override
	public List<RCodeDock> selectByParam(String rzName, String tzName,
			Integer start, Integer size) {
		Map<String, Object> map = new HashMap<String, Object>();
        map.put("rzName", rzName);
        map.put("tzName", tzName);
        map.put("start", start);
        map.put("size", size);
        List<RCodeDock> list = getSqlMapClientTemplate().queryForList("tb_r_code_dock.selectByParam", map);
        return list;
	}
	@Override
	public Long selectByParamCount(String rzName, String tzName) {
		Map<String, Object> map = new HashMap<String, Object>();
        map.put("rzName", rzName);
        map.put("tzName", tzName);
        Long count = (Long)getSqlMapClientTemplate().queryForObject("tb_r_code_dock.selectByParamCount", map);
		return count;
	}

}
