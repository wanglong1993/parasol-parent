package com.ginkgocap.ywxt.metadata.dao.code.impl;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.PostConstruct;
import javax.annotation.Resource;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;
import org.springframework.stereotype.Repository;

import com.ginkgocap.ywxt.metadata.dao.code.CodeLogDao;
import com.ginkgocap.ywxt.metadata.model.CodeLog;
import com.ginkgocap.ywxt.util.DateFunc;
import com.ibatis.sqlmap.client.SqlMapClient;
/**
 * 分词操作日志的DAO实现类
 * @author liu
 *
 */
@Repository("codeLogDAO")
public class CodeLogDaoImpl extends SqlMapClientDaoSupport implements CodeLogDao {

    @Resource
    SqlMapClient metadataSqlMapClient;

    @PostConstruct
    public void initSqlMapClient() {
        super.setSqlMapClient(metadataSqlMapClient);
    }
    @Override
    public CodeLog selectByPrimarKey(long id) {
        return (CodeLog) getSqlMapClientTemplate().queryForObject("tb_code_log.selectByPrimaryKey", id);
    }
    @Override
    public CodeLog insert(CodeLog code) {
        code.setCtime(DateFunc.getDate());
        Long id = (Long) getSqlMapClientTemplate().insert("tb_code_log.insertCodeLog", code);
        if (id != null) {
            code.setId(id);
            return code;
        } else {
            return null;
        }
    }
    @Override
    public int deleteByCodeId(long id) {
        return getSqlMapClientTemplate().delete("tb_code_log.deleteByCodeId", id);
    }
    @Override
    public long countByCodeId(long codeId) {
        return (Long) getSqlMapClientTemplate().queryForObject("tb_code_log.countByCodeId", codeId);
    }
    @SuppressWarnings("unchecked")
    @Override
    public List<CodeLog> selectByCodeId(long codeId, long startRow, int pageSize) {
        Map<String,Object> params = new HashMap<String, Object>();
        params.put("sysItemId", codeId);
        if(startRow!=0 || pageSize!=0){
            params.put("startRow", startRow);
            params.put("pageSize", pageSize);
        }
        return getSqlMapClientTemplate().queryForList("tb_code_log.selectByCodeId", params);
    }
    

}
