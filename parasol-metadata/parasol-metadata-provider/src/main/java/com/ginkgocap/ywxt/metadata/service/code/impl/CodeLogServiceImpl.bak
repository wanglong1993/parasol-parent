package com.ginkgocap.ywxt.metadata.service.code.impl;

import java.util.List;

import net.sf.json.JSONObject;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.ginkgocap.ywxt.metadata.dao.code.CodeLogDao;
import com.ginkgocap.ywxt.metadata.model.CodeLog;
import com.ginkgocap.ywxt.metadata.service.code.CodeLogService;
@Service("codeLogService")
public class CodeLogServiceImpl implements CodeLogService {
    @Autowired
    private CodeLogDao codeLogDao;
    private Logger logger = LoggerFactory.getLogger(getClass());
    @Override
    public CodeLog selectByPrimarKey(long id) {
        logger.debug("select code log with id:{}",id);
        CodeLog log = codeLogDao.selectByPrimarKey(id);
        logger.debug("find the log(id={})?{}",id,(log!=null));
        return log;
    }

    @Override
    public CodeLog insert(CodeLog codeLog) {
        logger.debug("insert a code log");
        logger.debug(JSONObject.fromObject(codeLog).toString());
        codeLog = codeLogDao.insert(codeLog);
        if(codeLog!=null){
            logger.debug("insert code log success");
            logger.debug("the inserted codelog id is:{}",codeLog.getId());
        }else{
            logger.debug("insert code log error");
        }
        return codeLog;
    }

    @Override
    public int deleteByCodeId(long codeId) {
        logger.debug("delete codeLog by codeId:{}",codeId);
        int count = codeLogDao.deleteByCodeId(codeId);
        logger.debug("delete {} rows by codeId={}",count,codeId);
        return count;
    }

    @Override
    public long countByCodeId(long codeId) {
        logger.debug("count codelog by codeId:{}", codeId);
        long count = codeLogDao.countByCodeId(codeId);
        logger.debug("count {} codelog by codeId:{}",count, codeId);
        return count;
    }

    @Override
    public List<CodeLog> selectByCodeId(long codeId, long startRow, int pageSize) {
        logger.debug("select codelog by codeId:{},startRow:{},pageSize:{}", new Object[]{codeId,startRow,pageSize});
        List<CodeLog> lt = codeLogDao.selectByCodeId(codeId, startRow, pageSize);
        logger.debug("find {} rows",lt.size());
        return lt;
    }
    
    

}
