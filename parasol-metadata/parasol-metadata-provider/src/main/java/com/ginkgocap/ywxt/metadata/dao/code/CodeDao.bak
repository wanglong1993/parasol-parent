package com.ginkgocap.ywxt.metadata.dao.code;

import java.util.List;
import java.util.Map;

import com.ginkgocap.ywxt.metadata.model.Code;
import com.ginkgocap.ywxt.metadata.model.CodeRegion;
/**
 * 类型Dao接口
 * @author liu
 * 创建时间：2012-3-5 10:13:02
 */
public interface CodeDao {
    /**
     * 通过主键获得类型
     * @param id
     * @return
     */
    Code selectByPrimarKey(long id);
    /**
     * 通过类型组合类型级别获取类型
     * @param group
     * @param level
     * @return
     */
    List<Code> selectByGroupAndLevel(String group,int level);
    /**
     * 插入类型
     * @param code
     * @return
     */
    Code insert(Code code);
    /**
     * 修改类型
     * @param code
     */
    void update(Code code);
    /**
     * 删除类型
     * @param id
     */
    void delete(long id);
    /**
     * 按行业名称获取行业
     * @param name
     * @return
     */
    List<Code> selectByName(String name);
    /**
     * 按关键字抓取
     * @param name
     * @return
     */
    List<Code> selectByParams(Map<String,Object> params);
    /**
     * 按行业名称获取行业
     * @param name
     * @param root
     * @return
     */
    List<Code> selectByName(String name, int root);
    
    /**查询所有
     * @return
     */
    List<Code> selectAll();
    List<Map> findByMap(Map<String, Object> map);
    List<Code> selectByOrderNo(int root);
    /***
     * 根据条件查询
     * @param name 分类词名称
     * @param createBy 创建人
     * @param sysItem 归属同义词
     * @param startTimer 开始时间
     * @param endTimer 结束时间
     * @return
     */
    List<Code> selectByParam(String name, String createBy, String sysItem, String startTimer, String endTimer,String type, Integer start, Integer size);
    
    Long selectByParamCount(String name, String createBy, String sysItem, String startTimer, String endTimer, String type);
    
    /**
     * 查询父节点的分词信息
     * @param id 
     * @return Code
     */
    Code selectFatherNodeById(long id);
    /**
     * 查询子节点的分词信息
     * @param id 
     * @return List<Code>
     */
    List<Code> selectChildNodeById(long id);
    /**
     * 查询兄弟节点的分词信息
     * @param id
     * @return List<Code>
     */
    List<Code> selectBrotherNodeById(long id) ;
    /**
     * @param useType   作用类型 0 系统类型，1 自定义类型 -1 全部
     * @param industry 0 不是行业 1 是行业  -1 全部
     */
    public long SelectCountByUserTypeIndustry(int userType,int industry,int level);
    /**
     * @param useType   作用类型 0 系统类型，1 自定义类型 -1 全部
     * @param industry 0 不是行业 1 是行业  -1 全部
     */
    public List<Code> SelectByUserTypeIndustry(int userType,int industry,int level,int PageIndex,int pageSize);
	/**
	 * 查询地区信息
	 * @param pid 父ID
	 * @return
	 * @author haiyan
	 */
    public List<CodeRegion> selectAreaList(Long pid); 
    
    /**
     * 
     * @return
     */
    public List<Code> selectAllOrderByNumberAsc();
    
    /**
     * 查询最大主键ID
     * @return
     */
    Long selectCataLogMaxId();
    
}
